{"name": "test_add_user_3[20]", "status": "broken", "statusDetails": {"message": "api.utils.exceptions.ResponseStatusCodeException:  Got 404 NOT FOUND for URL \"http://172.18.0.5:8080/api/del_user/fkulikovafkulikovafk\"", "trace": "self = <api.client.ApiClient object at 0x7fc356b58af0>\nusername = 'fkulikovafkulikovafk', password = 'XgPzvReZ$6'\nemail = 'nikolaevvladilen@yandex.ru', status_code = None, autoremove = True\n\n    def add_user(self, username, password, email, status_code=None, autoremove=False):\n        headers = {\n            'Content-Type': 'application/json'\n        }\n    \n        data = {\n            'username': username,\n            'password': password,\n            'email': email\n        }\n    \n        location = 'api/add_user'\n        try:\n>           response = self.make_request('POST', location, json_convert=False, headers=headers, allow_redirects=False, json=data, status_code=201 if status_code is None else status_code)\n\nautoremove = True\ndata       = {'email': 'nikolaevvladilen@yandex.ru', 'password': 'XgPzvReZ$6', 'username': 'fkulikovafkulikovafk'}\nemail      = 'nikolaevvladilen@yandex.ru'\nheaders    = {'Content-Type': 'application/json'}\nlocation   = 'api/add_user'\npassword   = 'XgPzvReZ$6'\nself       = <api.client.ApiClient object at 0x7fc356b58af0>\nstatus_code = None\nusername   = 'fkulikovafkulikovafk'\n\nproject/api/client.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.client.ApiClient object at 0x7fc356b58af0>, method = 'POST'\nlocation = 'api/add_user', status_code = 201\nheaders = {'Content-Type': 'application/json'}, params = None, data = None\njson_convert = False, custom_location = False, allow_redirects = False\njson = {'email': 'nikolaevvladilen@yandex.ru', 'password': 'XgPzvReZ$6', 'username': 'fkulikovafkulikovafk'}\n\n    def make_request(self, method, location, status_code=200, headers=None, params=None, data=None, json_convert=True,\n                     custom_location=False, allow_redirects=True, json=None):\n        if not custom_location:\n            url = urljoin(self.base_url, location)\n        else:\n            url = location\n    \n        response = self.session.request(method, url, headers=headers, params=params, data=data,\n                                        allow_redirects=allow_redirects, json=json)\n    \n        if response.status_code != status_code:\n>           raise ResponseStatusCodeException(f' Got {response.status_code} {response.reason} for URL \"{url}\"')\nE           api.utils.exceptions.ResponseStatusCodeException:  Got 210 UNKNOWN for URL \"http://172.18.0.5:8080/api/add_user\"\n\nallow_redirects = False\ncustom_location = False\ndata       = None\nheaders    = {'Content-Type': 'application/json'}\njson       = {'email': 'nikolaevvladilen@yandex.ru', 'password': 'XgPzvReZ$6', 'username': 'fkulikovafkulikovafk'}\njson_convert = False\nlocation   = 'api/add_user'\nmethod     = 'POST'\nparams     = None\nresponse   = <Response [210]>\nself       = <api.client.ApiClient object at 0x7fc356b58af0>\nstatus_code = 201\nurl        = 'http://172.18.0.5:8080/api/add_user'\n\nproject/api/client.py:28: ResponseStatusCodeException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_api.TestApi object at 0x7fc356d73850>, len_username = 20\nget_fake_user_info = ('fkulikova', 'XgPzvReZ$6', 'nikolaevvladilen@yandex.ru')\n\n    @allure.feature('API tests')\n    @allure.story('Add user api story')\n    @pytest.mark.parametrize('len_username', [1, 2, 3, 4, 5, 6, 20])\n    def test_add_user_3(self, len_username, get_fake_user_info):\n        \"\"\"Проверка валидации длины поля username\"\"\"\n        self.logger.start_logging(f'./project/app_logs/{inspect.getframeinfo(inspect.currentframe()).function}_api_log_{len_username}.txt')\n        with allure.step('Входим на сайт'):\n            self.api_client.login()\n        with allure.step('Создаём фейковые данные пользователя'):\n            username, password, email = get_fake_user_info\n            if len(username) < len_username:\n                username *= 5\n                username = username[:len_username]\n            else:\n                username = username[:len_username]\n        with allure.step('Добавляем данные о пользователе'):\n            try:\n                response = self.api_client.add_user(username, password, email, autoremove=True)\n            except ResponseStatusCodeException as exception:\n                self.api_client.logout()\n                self.logger.stop_logging()\n                allure.attach(self.logger.get_log_info(), 'App log', allure.attachment_type.TEXT)\n>               raise exception\n\nemail      = 'nikolaevvladilen@yandex.ru'\nget_fake_user_info = ('fkulikova', 'XgPzvReZ$6', 'nikolaevvladilen@yandex.ru')\nlen_username = 20\npassword   = 'XgPzvReZ$6'\nself       = <test_api.TestApi object at 0x7fc356d73850>\nusername   = 'fkulikovafkulikovafk'\n\nproject/tests/test_api.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nproject/tests/test_api.py:168: in test_add_user_3\n    response = self.api_client.add_user(username, password, email, autoremove=True)\n        email      = 'nikolaevvladilen@yandex.ru'\n        get_fake_user_info = ('fkulikova', 'XgPzvReZ$6', 'nikolaevvladilen@yandex.ru')\n        len_username = 20\n        password   = 'XgPzvReZ$6'\n        self       = <test_api.TestApi object at 0x7fc356d73850>\n        username   = 'fkulikovafkulikovafk'\nproject/api/client.py:92: in add_user\n    self.del_user(username)\n        autoremove = True\n        data       = {'email': 'nikolaevvladilen@yandex.ru', 'password': 'XgPzvReZ$6', 'username': 'fkulikovafkulikovafk'}\n        email      = 'nikolaevvladilen@yandex.ru'\n        headers    = {'Content-Type': 'application/json'}\n        location   = 'api/add_user'\n        password   = 'XgPzvReZ$6'\n        self       = <api.client.ApiClient object at 0x7fc356b58af0>\n        status_code = None\n        username   = 'fkulikovafkulikovafk'\nproject/api/client.py:110: in del_user\n    response = self.make_request('GET', location, json_convert=False, status_code=204 if status_code is None else status_code)\n        location   = 'api/del_user/fkulikovafkulikovafk'\n        self       = <api.client.ApiClient object at 0x7fc356b58af0>\n        status_code = None\n        username   = 'fkulikovafkulikovafk'\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.client.ApiClient object at 0x7fc356b58af0>, method = 'GET'\nlocation = 'api/del_user/fkulikovafkulikovafk', status_code = 204\nheaders = None, params = None, data = None, json_convert = False\ncustom_location = False, allow_redirects = True, json = None\n\n    def make_request(self, method, location, status_code=200, headers=None, params=None, data=None, json_convert=True,\n                     custom_location=False, allow_redirects=True, json=None):\n        if not custom_location:\n            url = urljoin(self.base_url, location)\n        else:\n            url = location\n    \n        response = self.session.request(method, url, headers=headers, params=params, data=data,\n                                        allow_redirects=allow_redirects, json=json)\n    \n        if response.status_code != status_code:\n>           raise ResponseStatusCodeException(f' Got {response.status_code} {response.reason} for URL \"{url}\"')\nE           api.utils.exceptions.ResponseStatusCodeException:  Got 404 NOT FOUND for URL \"http://172.18.0.5:8080/api/del_user/fkulikovafkulikovafk\"\n\nallow_redirects = True\ncustom_location = False\ndata       = None\nheaders    = None\njson       = None\njson_convert = False\nlocation   = 'api/del_user/fkulikovafkulikovafk'\nmethod     = 'GET'\nparams     = None\nresponse   = <Response [404]>\nself       = <api.client.ApiClient object at 0x7fc356b58af0>\nstatus_code = 204\nurl        = 'http://172.18.0.5:8080/api/del_user/fkulikovafkulikovafk'\n\nproject/api/client.py:28: ResponseStatusCodeException"}, "description": "Проверка валидации длины поля username", "steps": [{"name": "Входим на сайт", "status": "passed", "start": 1590595239295, "stop": 1590595239342}, {"name": "Создаём фейковые данные пользователя", "status": "passed", "start": 1590595239342, "stop": 1590595239342}, {"name": "Добавляем данные о пользователе", "status": "broken", "statusDetails": {"message": "api.utils.exceptions.ResponseStatusCodeException:  Got 404 NOT FOUND for URL \"http://172.18.0.5:8080/api/del_user/fkulikovafkulikovafk\"\n", "trace": "  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_api.py\", line 173, in test_add_user_3\n    raise exception\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_api.py\", line 168, in test_add_user_3\n    response = self.api_client.add_user(username, password, email, autoremove=True)\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 92, in add_user\n    self.del_user(username)\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 110, in del_user\n    response = self.make_request('GET', location, json_convert=False, status_code=204 if status_code is None else status_code)\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 28, in make_request\n    raise ResponseStatusCodeException(f' Got {response.status_code} {response.reason} for URL \"{url}\"')\n"}, "attachments": [{"name": "App log", "source": "83c8b56d-c1f6-4801-9af5-849238938847-attachment.txt", "type": "text/plain"}], "start": 1590595239342, "stop": 1590595239609}], "parameters": [{"name": "len_username", "value": "20"}], "start": 1590595239189, "stop": 1590595239610, "uuid": "9ce3044e-2aa6-40c5-9ca6-cdf69a99f430", "historyId": "d38e500a07aed187cf5dc0bbb3d3c0b1", "testCaseId": "07f92a0228109d27fe9a842cbc283dd8", "fullName": "tests.test_api.TestApi#test_add_user_3", "labels": [{"name": "story", "value": "Add user api story"}, {"name": "feature", "value": "API tests"}, {"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApi"}, {"name": "host", "value": "dmaksimov-laptop"}, {"name": "thread", "value": "19002-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}