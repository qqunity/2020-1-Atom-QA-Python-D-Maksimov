{"name": "test_reg_user_1", "status": "broken", "statusDetails": {"message": "api.utils.exceptions.ResponseStatusCodeException:  Got 302 FOUND for URL \"http://172.18.0.5:8080/reg\"", "trace": "self = <test_api.TestApi object at 0x7f97b1538d00>\nget_fake_user_info = ('lobanovratibor', '7LMPYXFu&2', 'ermakovairina@gruppa.ru')\n\n    @allure.feature('API tests')\n    @allure.story('Reg api story')\n    def test_reg_user_1(self, get_fake_user_info):\n        \"\"\"Проверка кода ответа при валидной регистрации\"\"\"\n        self.logger.start_logging(f'./project/app_logs/{inspect.getframeinfo(inspect.currentframe()).function}_api_log.txt')\n        with allure.step('Получаем информацию о невалидном пользователе'):\n            username, password, email = get_fake_user_info\n        with allure.step('Регистрируем нового пользователя'):\n            try:\n                response = self.api_client.reg_user(username, password, password, email, autoremove=True)\n            except ResponseStatusCodeException as exception:\n                self.logger.stop_logging()\n                allure.attach(self.logger.get_log_info(), 'App log', allure.attachment_type.TEXT)\n>               raise exception\n\nemail      = 'ermakovairina@gruppa.ru'\nget_fake_user_info = ('lobanovratibor', '7LMPYXFu&2', 'ermakovairina@gruppa.ru')\npassword   = '7LMPYXFu&2'\nself       = <test_api.TestApi object at 0x7f97b1538d00>\nusername   = 'lobanovratibor'\n\nproject/tests/test_api.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nproject/tests/test_api.py:54: in test_reg_user_1\n    response = self.api_client.reg_user(username, password, password, email, autoremove=True)\n        email      = 'ermakovairina@gruppa.ru'\n        get_fake_user_info = ('lobanovratibor', '7LMPYXFu&2', 'ermakovairina@gruppa.ru')\n        password   = '7LMPYXFu&2'\n        self       = <test_api.TestApi object at 0x7f97b1538d00>\n        username   = 'lobanovratibor'\nproject/api/client.py:71: in reg_user\n    raise exception\n        autoremove = True\n        confirm_password = '7LMPYXFu&2'\n        data       = {'confirm': '7LMPYXFu&2', 'email': 'ermakovairina@gruppa.ru', 'password': '7LMPYXFu&2', 'submit': 'Register', ...}\n        email      = 'ermakovairina@gruppa.ru'\n        headers    = {'Content-Type': 'application/x-www-form-urlencoded', 'Referer': 'http://127.0.0.1:8080/reg'}\n        location   = 'reg'\n        password   = '7LMPYXFu&2'\n        self       = <api.client.ApiClient object at 0x7f97b148cca0>\n        status_code = None\n        username   = 'lobanovratibor'\nproject/api/client.py:67: in reg_user\n    response = self.make_request('POST', location, json_convert=False, data=data, headers=headers, allow_redirects=False, status_code=201 if status_code is None else status_code)\n        autoremove = True\n        confirm_password = '7LMPYXFu&2'\n        data       = {'confirm': '7LMPYXFu&2', 'email': 'ermakovairina@gruppa.ru', 'password': '7LMPYXFu&2', 'submit': 'Register', ...}\n        email      = 'ermakovairina@gruppa.ru'\n        headers    = {'Content-Type': 'application/x-www-form-urlencoded', 'Referer': 'http://127.0.0.1:8080/reg'}\n        location   = 'reg'\n        password   = '7LMPYXFu&2'\n        self       = <api.client.ApiClient object at 0x7f97b148cca0>\n        status_code = None\n        username   = 'lobanovratibor'\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.client.ApiClient object at 0x7f97b148cca0>, method = 'POST'\nlocation = 'reg', status_code = 201\nheaders = {'Content-Type': 'application/x-www-form-urlencoded', 'Referer': 'http://127.0.0.1:8080/reg'}\nparams = None\ndata = {'confirm': '7LMPYXFu&2', 'email': 'ermakovairina@gruppa.ru', 'password': '7LMPYXFu&2', 'submit': 'Register', ...}\njson_convert = False, custom_location = False, allow_redirects = False\njson = None\n\n    def make_request(self, method, location, status_code=200, headers=None, params=None, data=None, json_convert=True,\n                     custom_location=False, allow_redirects=True, json=None):\n        if not custom_location:\n            url = urljoin(self.base_url, location)\n        else:\n            url = location\n    \n        response = self.session.request(method, url, headers=headers, params=params, data=data,\n                                        allow_redirects=allow_redirects, json=json)\n    \n        if response.status_code != status_code:\n>           raise ResponseStatusCodeException(f' Got {response.status_code} {response.reason} for URL \"{url}\"')\nE           api.utils.exceptions.ResponseStatusCodeException:  Got 302 FOUND for URL \"http://172.18.0.5:8080/reg\"\n\nallow_redirects = False\ncustom_location = False\ndata       = {'confirm': '7LMPYXFu&2', 'email': 'ermakovairina@gruppa.ru', 'password': '7LMPYXFu&2', 'submit': 'Register', ...}\nheaders    = {'Content-Type': 'application/x-www-form-urlencoded', 'Referer': 'http://127.0.0.1:8080/reg'}\njson       = None\njson_convert = False\nlocation   = 'reg'\nmethod     = 'POST'\nparams     = None\nresponse   = <Response [302]>\nself       = <api.client.ApiClient object at 0x7f97b148cca0>\nstatus_code = 201\nurl        = 'http://172.18.0.5:8080/reg'\n\nproject/api/client.py:28: ResponseStatusCodeException"}, "description": "Проверка кода ответа при валидной регистрации", "steps": [{"name": "Получаем информацию о невалидном пользователе", "status": "passed", "start": 1590595238833, "stop": 1590595238833}, {"name": "Регистрируем нового пользователя", "status": "broken", "statusDetails": {"message": "api.utils.exceptions.ResponseStatusCodeException:  Got 302 FOUND for URL \"http://172.18.0.5:8080/reg\"\n", "trace": "  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_api.py\", line 58, in test_reg_user_1\n    raise exception\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_api.py\", line 54, in test_reg_user_1\n    response = self.api_client.reg_user(username, password, password, email, autoremove=True)\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 71, in reg_user\n    raise exception\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 67, in reg_user\n    response = self.make_request('POST', location, json_convert=False, data=data, headers=headers, allow_redirects=False, status_code=201 if status_code is None else status_code)\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 28, in make_request\n    raise ResponseStatusCodeException(f' Got {response.status_code} {response.reason} for URL \"{url}\"')\n"}, "attachments": [{"name": "App log", "source": "c31e15e4-5b89-4908-9eb0-430e7c2ab5b1-attachment.txt", "type": "text/plain"}], "start": 1590595238833, "stop": 1590595239014}], "start": 1590595238639, "stop": 1590595239014, "uuid": "b13797eb-f17c-4b13-a87b-2cf1c5eb93ea", "historyId": "7bb4397368512691254c9faf9c76a007", "testCaseId": "42ff7d28f744c1cfad5bb779ff3f7454", "fullName": "tests.test_api.TestApi#test_reg_user_1", "labels": [{"name": "story", "value": "Reg api story"}, {"name": "feature", "value": "API tests"}, {"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApi"}, {"name": "host", "value": "dmaksimov-laptop"}, {"name": "thread", "value": "18994-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}