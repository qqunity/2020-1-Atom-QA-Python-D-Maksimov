{"name": "test_sign_up_negative_13", "status": "broken", "statusDetails": {"message": "ui.utils.exceptions.InvalidRegInfoException: User already exist", "trace": "self = <test_ui.TestUI object at 0x7fecd7390910>\ncreate_fake_user = ('svjatoslav_1976', '#d8Nilz^17', 'valentina2009@npo.info')\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fecd738fdc0>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fecd738f760>\n\n    @allure.feature('UI tests')\n    @allure.story('Sign up page story')\n    def test_sign_up_negative_13(self, create_fake_user, home_page_object, reg_page_object):\n        \"\"\"Проверка допустимого регистра поля password\"\"\"\n        self.logger.start_logging(\n            f'./project/app_logs/{inspect.getframeinfo(inspect.currentframe()).function}_ui_log.txt')\n        with allure.step('Получаем информацию о пользователях с разным ристром поля username'):\n            username1, password1, email1 = create_fake_user\n            username2 = username1.upper()\n            password2 = password1\n            email2 = email1 + 'q'\n        with allure.step('Получаем объект страницы регистрации'):\n            reg_page = self.login_page.sign_up(reg_page_object)\n        with allure.step('Регистрируемся и проверяем валидное отбражение ошибки на странице регистрации'):\n            try:\n                reg_page.sign_up(username2, email2, password2, home_page_object)\n            except InvalidRegInfoException as exception:\n                allure.attach(self.driver.get_screenshot_as_png(), 'Error screen', allure.attachment_type.PNG)\n                self.logger.stop_logging()\n                allure.attach(self.logger.get_log_info(), 'App log', allure.attachment_type.TEXT)\n>               raise exception\n\ncreate_fake_user = ('svjatoslav_1976', '#d8Nilz^17', 'valentina2009@npo.info')\nemail1     = 'valentina2009@npo.info'\nemail2     = 'valentina2009@npo.infoq'\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fecd738fdc0>\npassword1  = '#d8Nilz^17'\npassword2  = '#d8Nilz^17'\nreg_page   = <ui.pages.reg_page.RegPage object at 0x7fecd738f760>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fecd738f760>\nself       = <test_ui.TestUI object at 0x7fecd7390910>\nusername1  = 'svjatoslav_1976'\nusername2  = 'SVJATOSLAV_1976'\n\nproject/tests/test_ui.py:453: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nproject/tests/test_ui.py:448: in test_sign_up_negative_13\n    reg_page.sign_up(username2, email2, password2, home_page_object)\n        create_fake_user = ('svjatoslav_1976', '#d8Nilz^17', 'valentina2009@npo.info')\n        email1     = 'valentina2009@npo.info'\n        email2     = 'valentina2009@npo.infoq'\n        home_page_object = <ui.pages.home_page.HomePage object at 0x7fecd738fdc0>\n        password1  = '#d8Nilz^17'\n        password2  = '#d8Nilz^17'\n        reg_page   = <ui.pages.reg_page.RegPage object at 0x7fecd738f760>\n        reg_page_object = <ui.pages.reg_page.RegPage object at 0x7fecd738f760>\n        self       = <test_ui.TestUI object at 0x7fecd7390910>\n        username1  = 'svjatoslav_1976'\n        username2  = 'SVJATOSLAV_1976'\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui.pages.reg_page.RegPage object at 0x7fecd738f760>\nusername = 'SVJATOSLAV_1976', email = 'valentina2009@npo.infoq'\npassword = '#d8Nilz^17'\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fecd738fdc0>\nwrong_password = None\n\n    def sign_up(self, username, email, password, home_page_object, wrong_password=None):\n        self.paste_sign_up_info(username, email, password, wrong_password=wrong_password)\n        self.click_accept_reg_button()\n        self.click_submit_button()\n        try:\n            if wait(func=self.check_available_of_element(self.locators.POP_UP_ERR_FIELD, auto_use=False), timeout=1):\n>               raise InvalidRegInfoException(self.find(self.locators.POP_UP_ERR_FIELD).text)\nE               ui.utils.exceptions.InvalidRegInfoException: User already exist\n\nemail      = 'valentina2009@npo.infoq'\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fecd738fdc0>\npassword   = '#d8Nilz^17'\nself       = <ui.pages.reg_page.RegPage object at 0x7fecd738f760>\nusername   = 'SVJATOSLAV_1976'\nwrong_password = None\n\nproject/ui/pages/reg_page.py:31: InvalidRegInfoException"}, "description": "Проверка допустимого регистра поля password", "steps": [{"name": "Получаем информацию о пользователях с разным ристром поля username", "status": "passed", "start": 1590595698561, "stop": 1590595698561}, {"name": "Получаем объект страницы регистрации", "status": "passed", "start": 1590595698561, "stop": 1590595698754}, {"name": "Регистрируемся и проверяем валидное отбражение ошибки на странице регистрации", "status": "broken", "statusDetails": {"message": "ui.utils.exceptions.InvalidRegInfoException: User already exist\n", "trace": "  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_ui.py\", line 453, in test_sign_up_negative_13\n    raise exception\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_ui.py\", line 448, in test_sign_up_negative_13\n    reg_page.sign_up(username2, email2, password2, home_page_object)\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/ui/pages/reg_page.py\", line 31, in sign_up\n    raise InvalidRegInfoException(self.find(self.locators.POP_UP_ERR_FIELD).text)\n"}, "attachments": [{"name": "Error screen", "source": "f8a26a8c-b0ca-4bec-b3ea-138e1d6d2dc5-attachment.png", "type": "image/png"}, {"name": "App log", "source": "bd7f246a-3f55-4769-94bd-bc428c8a151d-attachment.txt", "type": "text/plain"}], "start": 1590595698754, "stop": 1590595700678}], "start": 1590595698447, "stop": 1590595700679, "uuid": "22a63442-d6b4-47dd-8ddb-e6c60f220de8", "historyId": "ed744844c3668268c7de446846ac56bf", "testCaseId": "d7a676c195527d0cbb3f274343d60864", "fullName": "tests.test_ui.TestUI#test_sign_up_negative_13", "labels": [{"name": "story", "value": "Sign up page story"}, {"name": "feature", "value": "UI tests"}, {"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUI"}, {"name": "host", "value": "dmaksimov-laptop"}, {"name": "thread", "value": "22069-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}