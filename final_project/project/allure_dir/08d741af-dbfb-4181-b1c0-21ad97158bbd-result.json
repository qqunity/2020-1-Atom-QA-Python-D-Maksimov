{"name": "test_add_user_5", "status": "broken", "statusDetails": {"message": "api.utils.exceptions.ResponseStatusCodeException:  Got 210 UNKNOWN for URL \"http://172.18.0.5:8080/api/add_user\"", "trace": "self = <test_api.TestApi object at 0x7fee39179f40>\ncreate_fake_user = ('velimir_62', '*b3Q4HriOE', 'seliverst_1973@rao.org')\n\n    @allure.feature('API tests')\n    @allure.story('Add user api story')\n    def test_add_user_5(self, create_fake_user):\n        \"\"\"Проверка создания пользователя при совпадении поля email с уже существующим в БД\"\"\"\n        self.logger.start_logging(f'./project/app_logs/{inspect.getframeinfo(inspect.currentframe()).function}_api_log.txt')\n        with allure.step('Создаём фейковые данные пользователя'):\n            username, password, email = create_fake_user\n        with allure.step('Входим на сайт'):\n            self.api_client.login()\n        with allure.step('Добавляем данные о пользователе'):\n            try:\n                response = self.api_client.add_user(username + 'q', password, email, status_code=409)\n            except ResponseStatusCodeException as exception:\n                self.api_client.logout()\n                self.logger.stop_logging()\n                allure.attach(self.logger.get_log_info(), 'App log', allure.attachment_type.TEXT)\n>               raise exception\n\ncreate_fake_user = ('velimir_62', '*b3Q4HriOE', 'seliverst_1973@rao.org')\nemail      = 'seliverst_1973@rao.org'\npassword   = '*b3Q4HriOE'\nself       = <test_api.TestApi object at 0x7fee39179f40>\nusername   = 'velimir_62'\n\nproject/tests/test_api.py:213: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nproject/tests/test_api.py:208: in test_add_user_5\n    response = self.api_client.add_user(username + 'q', password, email, status_code=409)\n        create_fake_user = ('velimir_62', '*b3Q4HriOE', 'seliverst_1973@rao.org')\n        email      = 'seliverst_1973@rao.org'\n        password   = '*b3Q4HriOE'\n        self       = <test_api.TestApi object at 0x7fee39179f40>\n        username   = 'velimir_62'\nproject/api/client.py:93: in add_user\n    raise exception\n        autoremove = False\n        data       = {'email': 'seliverst_1973@rao.org', 'password': '*b3Q4HriOE', 'username': 'velimir_62q'}\n        email      = 'seliverst_1973@rao.org'\n        headers    = {'Content-Type': 'application/json'}\n        location   = 'api/add_user'\n        password   = '*b3Q4HriOE'\n        self       = <api.client.ApiClient object at 0x7fee392408b0>\n        status_code = 409\n        username   = 'velimir_62q'\nproject/api/client.py:89: in add_user\n    response = self.make_request('POST', location, json_convert=False, headers=headers, allow_redirects=False, json=data, status_code=201 if status_code is None else status_code)\n        autoremove = False\n        data       = {'email': 'seliverst_1973@rao.org', 'password': '*b3Q4HriOE', 'username': 'velimir_62q'}\n        email      = 'seliverst_1973@rao.org'\n        headers    = {'Content-Type': 'application/json'}\n        location   = 'api/add_user'\n        password   = '*b3Q4HriOE'\n        self       = <api.client.ApiClient object at 0x7fee392408b0>\n        status_code = 409\n        username   = 'velimir_62q'\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.client.ApiClient object at 0x7fee392408b0>, method = 'POST'\nlocation = 'api/add_user', status_code = 409\nheaders = {'Content-Type': 'application/json'}, params = None, data = None\njson_convert = False, custom_location = False, allow_redirects = False\njson = {'email': 'seliverst_1973@rao.org', 'password': '*b3Q4HriOE', 'username': 'velimir_62q'}\n\n    def make_request(self, method, location, status_code=200, headers=None, params=None, data=None, json_convert=True,\n                     custom_location=False, allow_redirects=True, json=None):\n        if not custom_location:\n            url = urljoin(self.base_url, location)\n        else:\n            url = location\n    \n        response = self.session.request(method, url, headers=headers, params=params, data=data,\n                                        allow_redirects=allow_redirects, json=json)\n    \n        if response.status_code != status_code:\n>           raise ResponseStatusCodeException(f' Got {response.status_code} {response.reason} for URL \"{url}\"')\nE           api.utils.exceptions.ResponseStatusCodeException:  Got 210 UNKNOWN for URL \"http://172.18.0.5:8080/api/add_user\"\n\nallow_redirects = False\ncustom_location = False\ndata       = None\nheaders    = {'Content-Type': 'application/json'}\njson       = {'email': 'seliverst_1973@rao.org', 'password': '*b3Q4HriOE', 'username': 'velimir_62q'}\njson_convert = False\nlocation   = 'api/add_user'\nmethod     = 'POST'\nparams     = None\nresponse   = <Response [210]>\nself       = <api.client.ApiClient object at 0x7fee392408b0>\nstatus_code = 409\nurl        = 'http://172.18.0.5:8080/api/add_user'\n\nproject/api/client.py:28: ResponseStatusCodeException"}, "description": "Проверка создания пользователя при совпадении поля email с уже существующим в БД", "steps": [{"name": "Создаём фейковые данные пользователя", "status": "passed", "start": 1590595239065, "stop": 1590595239065}, {"name": "Входим на сайт", "status": "passed", "start": 1590595239065, "stop": 1590595239089}, {"name": "Добавляем данные о пользователе", "status": "broken", "statusDetails": {"message": "api.utils.exceptions.ResponseStatusCodeException:  Got 210 UNKNOWN for URL \"http://172.18.0.5:8080/api/add_user\"\n", "trace": "  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_api.py\", line 213, in test_add_user_5\n    raise exception\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_api.py\", line 208, in test_add_user_5\n    response = self.api_client.add_user(username + 'q', password, email, status_code=409)\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 93, in add_user\n    raise exception\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 89, in add_user\n    response = self.make_request('POST', location, json_convert=False, headers=headers, allow_redirects=False, json=data, status_code=201 if status_code is None else status_code)\n  File \"/media/qunity/Workspace/Python_projects/qa-project/project/api/client.py\", line 28, in make_request\n    raise ResponseStatusCodeException(f' Got {response.status_code} {response.reason} for URL \"{url}\"')\n"}, "attachments": [{"name": "App log", "source": "b1e7813c-6c30-46ea-85e2-115a628471c6-attachment.txt", "type": "text/plain"}], "start": 1590595239089, "stop": 1590595239257}], "start": 1590595238942, "stop": 1590595239257, "uuid": "7cdaabaa-e5c7-4560-afb6-49fa1260bee3", "historyId": "896b85f645ae9d6d2ea8b1c125482c1b", "testCaseId": "c002d0032d8c92df402792405a2763a4", "fullName": "tests.test_api.TestApi#test_add_user_5", "labels": [{"name": "feature", "value": "API tests"}, {"name": "story", "value": "Add user api story"}, {"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApi"}, {"name": "host", "value": "dmaksimov-laptop"}, {"name": "thread", "value": "18998-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}