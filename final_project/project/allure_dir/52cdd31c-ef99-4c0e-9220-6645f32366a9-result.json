{"name": "test_sign_up_negative_7", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"{'email': ['...must match']}\" == 'Passwords mu...email address'\n  - Passwords must match and invalid email address\n  + {'email': ['Invalid email address'], 'password': ['Passwords must match']}", "trace": "self = <test_ui.TestUI object at 0x7fb6b20c18b0>\nget_fake_user_info = ('spartak1993', '2hDFrq7U(z', 'varfolome_2006@satkinski.ru')\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fb6b1ff0e50>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fb6b1ff03a0>\n\n    @allure.feature('UI tests')\n    @allure.story('Sign up page story')\n    def test_sign_up_negative_7(self, get_fake_user_info, home_page_object, reg_page_object):\n        \"\"\"Проверка регистрации пользователя с одновременно несовпадающими полями password, confirm_password и невалидным полем email\"\"\"\n        self.logger.start_logging(\n            f'./project/app_logs/{inspect.getframeinfo(inspect.currentframe()).function}_ui_log.txt')\n        with allure.step('Получаем информацию о невалидном пользователе'):\n            username, password, email = get_fake_user_info\n            email = email.split('@')[0]\n        with allure.step('Получаем объект страницы регистрации'):\n            reg_page = self.login_page.sign_up(reg_page_object)\n        with allure.step('Регистрируемся и проверяем валидное отбражение ошибки на странице регистрации'):\n            try:\n>               reg_page.sign_up(username, email, password, home_page_object, wrong_password=password + 'qwe')\n\nemail      = 'varfolome_2006'\nget_fake_user_info = ('spartak1993', '2hDFrq7U(z', 'varfolome_2006@satkinski.ru')\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fb6b1ff0e50>\npassword   = '2hDFrq7U(z'\nreg_page   = <ui.pages.reg_page.RegPage object at 0x7fb6b1ff03a0>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fb6b1ff03a0>\nself       = <test_ui.TestUI object at 0x7fb6b20c18b0>\nusername   = 'spartak1993'\n\nproject/tests/test_ui.py:324: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui.pages.reg_page.RegPage object at 0x7fb6b1ff03a0>\nusername = 'spartak1993', email = 'varfolome_2006', password = '2hDFrq7U(z'\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fb6b1ff0e50>\nwrong_password = '2hDFrq7U(zqwe'\n\n    def sign_up(self, username, email, password, home_page_object, wrong_password=None):\n        self.paste_sign_up_info(username, email, password, wrong_password=wrong_password)\n        self.click_accept_reg_button()\n        self.click_submit_button()\n        try:\n            if wait(func=self.check_available_of_element(self.locators.POP_UP_ERR_FIELD, auto_use=False), timeout=1):\n>               raise InvalidRegInfoException(self.find(self.locators.POP_UP_ERR_FIELD).text)\nE               ui.utils.exceptions.InvalidRegInfoException: {'email': ['Invalid email address'], 'password': ['Passwords must match']}\n\nemail      = 'varfolome_2006'\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fb6b1ff0e50>\npassword   = '2hDFrq7U(z'\nself       = <ui.pages.reg_page.RegPage object at 0x7fb6b1ff03a0>\nusername   = 'spartak1993'\nwrong_password = '2hDFrq7U(zqwe'\n\nproject/ui/pages/reg_page.py:31: InvalidRegInfoException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_ui.TestUI object at 0x7fb6b20c18b0>\nget_fake_user_info = ('spartak1993', '2hDFrq7U(z', 'varfolome_2006@satkinski.ru')\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fb6b1ff0e50>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fb6b1ff03a0>\n\n    @allure.feature('UI tests')\n    @allure.story('Sign up page story')\n    def test_sign_up_negative_7(self, get_fake_user_info, home_page_object, reg_page_object):\n        \"\"\"Проверка регистрации пользователя с одновременно несовпадающими полями password, confirm_password и невалидным полем email\"\"\"\n        self.logger.start_logging(\n            f'./project/app_logs/{inspect.getframeinfo(inspect.currentframe()).function}_ui_log.txt')\n        with allure.step('Получаем информацию о невалидном пользователе'):\n            username, password, email = get_fake_user_info\n            email = email.split('@')[0]\n        with allure.step('Получаем объект страницы регистрации'):\n            reg_page = self.login_page.sign_up(reg_page_object)\n        with allure.step('Регистрируемся и проверяем валидное отбражение ошибки на странице регистрации'):\n            try:\n                reg_page.sign_up(username, email, password, home_page_object, wrong_password=password + 'qwe')\n            except InvalidRegInfoException as exception:\n                allure.attach(self.driver.get_screenshot_as_png(), 'Error screen', allure.attachment_type.PNG)\n                self.logger.stop_logging()\n                allure.attach(self.logger.get_log_info(), 'App log', allure.attachment_type.TEXT)\n>               assert exception.args[0] == 'Passwords must match and invalid email address'\nE               assert \"{'email': ['...must match']}\" == 'Passwords mu...email address'\nE                 - Passwords must match and invalid email address\nE                 + {'email': ['Invalid email address'], 'password': ['Passwords must match']}\n\nemail      = 'varfolome_2006'\nget_fake_user_info = ('spartak1993', '2hDFrq7U(z', 'varfolome_2006@satkinski.ru')\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fb6b1ff0e50>\npassword   = '2hDFrq7U(z'\nreg_page   = <ui.pages.reg_page.RegPage object at 0x7fb6b1ff03a0>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fb6b1ff03a0>\nself       = <test_ui.TestUI object at 0x7fb6b20c18b0>\nusername   = 'spartak1993'\n\nproject/tests/test_ui.py:329: AssertionError"}, "description": "Проверка регистрации пользователя с одновременно несовпадающими полями password, confirm_password и невалидным полем email", "steps": [{"name": "Получаем информацию о невалидном пользователе", "status": "passed", "start": 1590595571551, "stop": 1590595571551}, {"name": "Получаем объект страницы регистрации", "status": "passed", "start": 1590595571551, "stop": 1590595571713}, {"name": "Регистрируемся и проверяем валидное отбражение ошибки на странице регистрации", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"{'email': ['...must match']}\" == 'Passwords mu...email address'\n  - Passwords must match and invalid email address\n  + {'email': ['Invalid email address'], 'password': ['Passwords must match']}\n", "trace": "  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_ui.py\", line 329, in test_sign_up_negative_7\n    assert exception.args[0] == 'Passwords must match and invalid email address'\n"}, "attachments": [{"name": "Error screen", "source": "e6783c38-17cf-4d3b-bf76-0ec40e0e6e97-attachment.png", "type": "image/png"}, {"name": "App log", "source": "2bdd8e10-956b-42ce-a200-8508a75b42b0-attachment.txt", "type": "text/plain"}], "start": 1590595571713, "stop": 1590595574112}], "start": 1590595571469, "stop": 1590595574423, "uuid": "aa5afcaf-1e8f-461d-9b40-71e2ab3cf1b0", "historyId": "129636263e395fa894c201480f37a11e", "testCaseId": "0a6d38f9393781b25c975c10f29177b2", "fullName": "tests.test_ui.TestUI#test_sign_up_negative_7", "labels": [{"name": "feature", "value": "UI tests"}, {"name": "story", "value": "Sign up page story"}, {"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUI"}, {"name": "host", "value": "dmaksimov-laptop"}, {"name": "thread", "value": "22064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}