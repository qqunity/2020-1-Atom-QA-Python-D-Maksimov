{"name": "test_sign_up_negative_8[1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"{'username':...must match']}\" == 'Incorrect us...ds must match'\n  - Incorrect username length and passwords must match\n  + {'username': ['Incorrect username length'], 'password': ['Passwords must match']}", "trace": "self = <test_ui.TestUI object at 0x7fdf362983a0>\nget_fake_user_info = ('marian73', 'rt7IUoyHU@', 'kallistrat1979@oao.net')\nlen_username = 1\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fdf36243340>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fdf362432b0>\n\n    @allure.feature('UI tests')\n    @allure.story('Sign up page story')\n    @pytest.mark.parametrize('len_username', [1, 2, 3, 4, 5])\n    def test_sign_up_negative_8(self, get_fake_user_info, len_username, home_page_object, reg_page_object):\n        \"\"\"Проверка регистрации пользователя с одновременно несовпадающими полями password, confirm_password и невалидным полем username\"\"\"\n        self.logger.start_logging(\n            f'./project/app_logs/{inspect.getframeinfo(inspect.currentframe()).function}_ui_log_{len_username}.txt')\n        with allure.step('Получаем информацию о невалидном пользователе'):\n            username, password, email = get_fake_user_info\n            if len(username) < len_username:\n                username *= len_username\n            username = username[:len_username]\n        with allure.step('Получаем объект страницы регистрации'):\n            reg_page = self.login_page.sign_up(reg_page_object)\n        with allure.step('Регистрируемся и проверяем валидное отбражение ошибки на странице регистрации'):\n            try:\n>               reg_page.sign_up(username, email, password, home_page_object, wrong_password=password + 'qwe')\n\nemail      = 'kallistrat1979@oao.net'\nget_fake_user_info = ('marian73', 'rt7IUoyHU@', 'kallistrat1979@oao.net')\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fdf36243340>\nlen_username = 1\npassword   = 'rt7IUoyHU@'\nreg_page   = <ui.pages.reg_page.RegPage object at 0x7fdf362432b0>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fdf362432b0>\nself       = <test_ui.TestUI object at 0x7fdf362983a0>\nusername   = 'm'\n\nproject/tests/test_ui.py:347: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui.pages.reg_page.RegPage object at 0x7fdf362432b0>, username = 'm'\nemail = 'kallistrat1979@oao.net', password = 'rt7IUoyHU@'\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fdf36243340>\nwrong_password = 'rt7IUoyHU@qwe'\n\n    def sign_up(self, username, email, password, home_page_object, wrong_password=None):\n        self.paste_sign_up_info(username, email, password, wrong_password=wrong_password)\n        self.click_accept_reg_button()\n        self.click_submit_button()\n        try:\n            if wait(func=self.check_available_of_element(self.locators.POP_UP_ERR_FIELD, auto_use=False), timeout=1):\n>               raise InvalidRegInfoException(self.find(self.locators.POP_UP_ERR_FIELD).text)\nE               ui.utils.exceptions.InvalidRegInfoException: {'username': ['Incorrect username length'], 'password': ['Passwords must match']}\n\nemail      = 'kallistrat1979@oao.net'\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fdf36243340>\npassword   = 'rt7IUoyHU@'\nself       = <ui.pages.reg_page.RegPage object at 0x7fdf362432b0>\nusername   = 'm'\nwrong_password = 'rt7IUoyHU@qwe'\n\nproject/ui/pages/reg_page.py:31: InvalidRegInfoException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_ui.TestUI object at 0x7fdf362983a0>\nget_fake_user_info = ('marian73', 'rt7IUoyHU@', 'kallistrat1979@oao.net')\nlen_username = 1\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fdf36243340>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fdf362432b0>\n\n    @allure.feature('UI tests')\n    @allure.story('Sign up page story')\n    @pytest.mark.parametrize('len_username', [1, 2, 3, 4, 5])\n    def test_sign_up_negative_8(self, get_fake_user_info, len_username, home_page_object, reg_page_object):\n        \"\"\"Проверка регистрации пользователя с одновременно несовпадающими полями password, confirm_password и невалидным полем username\"\"\"\n        self.logger.start_logging(\n            f'./project/app_logs/{inspect.getframeinfo(inspect.currentframe()).function}_ui_log_{len_username}.txt')\n        with allure.step('Получаем информацию о невалидном пользователе'):\n            username, password, email = get_fake_user_info\n            if len(username) < len_username:\n                username *= len_username\n            username = username[:len_username]\n        with allure.step('Получаем объект страницы регистрации'):\n            reg_page = self.login_page.sign_up(reg_page_object)\n        with allure.step('Регистрируемся и проверяем валидное отбражение ошибки на странице регистрации'):\n            try:\n                reg_page.sign_up(username, email, password, home_page_object, wrong_password=password + 'qwe')\n            except InvalidRegInfoException as exception:\n                allure.attach(self.driver.get_screenshot_as_png(), 'Error screen', allure.attachment_type.PNG)\n                self.logger.stop_logging()\n                allure.attach(self.logger.get_log_info(), 'App log', allure.attachment_type.TEXT)\n>               assert exception.args[0] == 'Incorrect username length and passwords must match'\nE               assert \"{'username':...must match']}\" == 'Incorrect us...ds must match'\nE                 - Incorrect username length and passwords must match\nE                 + {'username': ['Incorrect username length'], 'password': ['Passwords must match']}\n\nemail      = 'kallistrat1979@oao.net'\nget_fake_user_info = ('marian73', 'rt7IUoyHU@', 'kallistrat1979@oao.net')\nhome_page_object = <ui.pages.home_page.HomePage object at 0x7fdf36243340>\nlen_username = 1\npassword   = 'rt7IUoyHU@'\nreg_page   = <ui.pages.reg_page.RegPage object at 0x7fdf362432b0>\nreg_page_object = <ui.pages.reg_page.RegPage object at 0x7fdf362432b0>\nself       = <test_ui.TestUI object at 0x7fdf362983a0>\nusername   = 'm'\n\nproject/tests/test_ui.py:352: AssertionError"}, "description": "Проверка регистрации пользователя с одновременно несовпадающими полями password, confirm_password и невалидным полем username", "steps": [{"name": "Получаем информацию о невалидном пользователе", "status": "passed", "start": 1590595571537, "stop": 1590595571538}, {"name": "Получаем объект страницы регистрации", "status": "passed", "start": 1590595571538, "stop": 1590595571685}, {"name": "Регистрируемся и проверяем валидное отбражение ошибки на странице регистрации", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"{'username':...must match']}\" == 'Incorrect us...ds must match'\n  - Incorrect username length and passwords must match\n  + {'username': ['Incorrect username length'], 'password': ['Passwords must match']}\n", "trace": "  File \"/media/qunity/Workspace/Python_projects/qa-project/project/tests/test_ui.py\", line 352, in test_sign_up_negative_8\n    assert exception.args[0] == 'Incorrect username length and passwords must match'\n"}, "attachments": [{"name": "Error screen", "source": "930e54ba-ce38-4444-981c-efe6e4451a07-attachment.png", "type": "image/png"}, {"name": "App log", "source": "98ca3021-ba21-4a11-95bf-7f9e1a2da479-attachment.txt", "type": "text/plain"}], "start": 1590595571685, "stop": 1590595574112}], "parameters": [{"name": "len_username", "value": "1"}], "start": 1590595571447, "stop": 1590595574423, "uuid": "9fec7e73-b00f-4f1a-967d-ce804cdac0ed", "historyId": "d88599d79d8ae7fc295fbf0ef6407031", "testCaseId": "b16ff2d1f506ca04887854c5a80bcb6f", "fullName": "tests.test_ui.TestUI#test_sign_up_negative_8", "labels": [{"name": "story", "value": "Sign up page story"}, {"name": "feature", "value": "UI tests"}, {"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUI"}, {"name": "host", "value": "dmaksimov-laptop"}, {"name": "thread", "value": "22053-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}